{"version":3,"sources":["assets/button.webp","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","timeoutId","useRef","loopVideoRef","responseVideoRef","_useState","useState","undefined","_useState2","Object","slicedToArray","videoInQueue","setVideoInQueue","_useState3","_useState4","videoName","setVideoName","_useState5","_useState6","isResponseVideoVisible","setResponseVideoVisible","_useState7","_useState8","isOverlayVisible","setOverlayVisible","video1","document","getElementById","video2","video3","video4","video5","loopvideo","welcomevideo","useEffect","current","play","sendDialogToServer","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","message","res","responseVideoName","wrap","_context","prev","next","trim","clearTimeout","console","log","axios","post","sent","data","queryResult","fulfillmentText","stop","_x","apply","this","arguments","commands","command","callback","_useSpeechRecognition","useSpeechRecognition","listening","browserSupportsSpeechRecognition","concat","setTimeout","react_default","a","createElement","className","ref","muted","onPlay","onEnded","load","SpeechRecognition","stopListening","src","type","style","zIndex","startListening","continuous","id","position","onClick","height","cursor","buttonBg","alt","App","src_components_Home","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0f987438.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/button.9ee987ac.webp\";","import React, { useState, useRef, useEffect } from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport axios from \"axios\";\nimport \"./Home.css\";\n\nimport buttonBg from \"../assets/button.webp\";\nconst Home = () => {\n  const TIMEOUT = 2 * 60000; //2 minutes\n  let timeoutId = useRef();\n  const loopVideoRef = useRef(null);\n  const responseVideoRef = useRef(null);\n\n  const [videoInQueue, setVideoInQueue] = useState(undefined);\n  const [videoName, setVideoName] = useState(\"welcome.mp4\");\n\n  const [isResponseVideoVisible, setResponseVideoVisible] = useState(true);\n  const [isOverlayVisible, setOverlayVisible] = useState(true);\n  const video1=document.getElementById(\"video1\")\n  const video2=document.getElementById(\"video2\")\n  const video3=document.getElementById(\"video3\")\n  const video4=document.getElementById(\"video4\")\n  const video5=document.getElementById(\"video5\")\n  const loopvideo=document.getElementById(\"loopvideo\")\n  const welcomevideo=document.getElementById(\"welcome\")\n  useEffect(() => {\n    if (isOverlayVisible) return;\n    responseVideoRef.current.play();\n  }, [isOverlayVisible]);\n\n  // Sends the message to the server\n  const sendDialogToServer = async (message) => {\n    if (message.trim() !== \"\") {\n      if (timeoutId.current) clearTimeout(timeoutId.current);\n      console.log(\"Captured text : \", message);\n      const res = await axios.post(\n        \"https://vidchatapi.herokuapp.com/text-input\",\n        {\n          message: message,\n        }\n      );\n      const responseVideoName =\n        res.data.data[0].queryResult.fulfillmentText ;\n      console.log(\"Video to be played : \", responseVideoName);\n      setVideoInQueue(responseVideoName);\n    }\n  };\n\n  const commands = [\n    {\n      command: \"*\",\n      callback: (message) => sendDialogToServer(message),\n    },\n  ];\n  const { listening, browserSupportsSpeechRecognition } = useSpeechRecognition({\n    commands,\n  });\n\n  useEffect(() => {\n    if (isOverlayVisible) return;\n    responseVideoRef.current.play();\n  }, [isOverlayVisible]);\n\n  useEffect(() => {\n    if (timeoutId.current) clearTimeout(timeoutId.current);\n \n    console.log(`I'm ${!listening ? \"not\" : \"\"} listening`);\n\n    if (!listening) return;\n    timeoutId.current = setTimeout(() => {\n      const responseVideoName = \"thankyou.mp4\";\n      console.log(\"Video to be played : \", responseVideoName);\n      setVideoInQueue(responseVideoName);\n    }, TIMEOUT);\n  }, [listening]);\n\n  // Checks browser compatibility\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <div>\n      {/* Loop video plays indefinitely in background */}\n      <video\n        className=\"video\"\n        ref={loopVideoRef}\n        muted\n        onPlay={() => console.log(\"Playing loop.mp4\")}\n        onEnded={() => {\n          //If no video is in queue we loop the video again from 0th second\n          if (!videoInQueue) {\n            // loopVideoRef.current.currentTime = 0;\n            loopVideoRef.current.play();\n            return;\n          }\n\n          //If there is a video in queue we set that to be played and make the response visible\n          setVideoName(videoInQueue);\n          setVideoInQueue(undefined);\n          setResponseVideoVisible(true);\n          responseVideoRef.current.load();\n          SpeechRecognition.stopListening();\n          responseVideoRef.current.play();\n        }}\n      >\n        <source src=\"/videos/loop.mp4\" type=\"video/mp4\" />\n      </video>\n\n      {/* Loading the response video, initially the video name is welcome.mp4 */}\n      \n      <video\n        className=\"video\"\n        ref={responseVideoRef}\n        onPlay={()=>{\n        if(videoName===\"video1\"){\n          video1.play()\n          loopvideo.style.zIndex=-2\n          video1.style.zIndex=2}\n        else if(videoName===\"video2\"){\n          video2.play()\n          loopvideo.style.zIndex=-2\n          video2.style.zIndex=2}\n        else if(videoName===\"video3\"){\n          video3.play()\n          video3.style.zIndex=2\n          loopvideo.style.zIndex=-2}\n        else if(videoName===\"video4\"){\n          video4.play()\n          video4.style.zIndex=2\n          loopvideo.style.zIndex=-2}\n        else if(videoName===\"video5\"){\n          loopvideo.style.zIndex=-2\n        video5.style.zIndex=2\n          video5.play()}\n        else{\n          if (!videoInQueue) {\n            loopvideo.play()\n            loopVideoRef.current.play();\n          }\n          \n        }\n      }\n      }\n        onEnded={() => {\n          // To reset the loop video to 0th second\n          loopVideoRef.current.play();\n          if (videoName !== \"thankyou.mp4\")\n            SpeechRecognition.startListening({ continuous: true });\n          else console.log(\"I won't listen anymore\");\n\n        }}\n        style={{ zIndex: isResponseVideoVisible ? -3 : -1 }}\n      >\n        <source src={`/videos/${videoName}`} type=\"video/mp4\" />\n      </video>\n      <video \n      id=\"loopvideo\"\n      muted \n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{loopvideo.style.zIndex=20}}\n      onEnded={()=>{\n        loopvideo.play()\n        loopvideo.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/loop.mp4\" type=\"video/mp4\" />\n      </video>\n      <video \n      id=\"video1\" \n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{\n        \n        console.log(\"Video 1 playing\")}}\n        onEnded={()=>{\n        loopvideo.play()\n        video1.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/video1.mp4\" type=\"video/mp4\" />\n      </video>\n      <video \n      muted\n      id=\"video2\" \n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{\n        \n        console.log(\"Video 2 playing\")}}\n      onEnded={()=>{\n        loopvideo.play()\n        video2.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/video2.mp4\" type=\"video/mp4\" />\n      </video>\n      <video \n      muted\n      id=\"video3\" \n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{\n        \n        \n        console.log(\"Video 3 playing\")}}\n      onEnded={()=>{\n        loopvideo.play()\n        video3.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/video3.mp4\" type=\"video/mp4\" />\n      </video>\n      <video \n      muted\n      id=\"video4\" \n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{\n        console.log(\"Video 4 playing\")}}\n      onEnded={()=>{\n        loopvideo.play()\n        video4.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/video4.mp4\" type=\"video/mp4\" />\n      </video>\n      <video \n      id=\"video5\" \n      muted\n      className=\"video\" \n      style={{zIndex:-1}}\n      onPlay={()=>{\n        \n      console.log(\"Video 5 playing\")}}\n      onEnded={()=>{\n        loopvideo.play();\n        video5.style.zIndex=-2\n        loopVideoRef.current.play();\n        if (videoName !== \"thankyou.mp4\")\n          SpeechRecognition.startListening({ continuous: true });\n        else console.log(\"I won't listen anymore\");}}>\n\n        <source src=\"videos/video5.mp4\" type=\"video/mp4\" />\n      </video>\n    <video id=\"welcome\" className=\"video\" style={{zIndex:21,position:\"absolute\"}}\n    onEnded={()=>{welcomevideo.style.zIndex=-3\n    loopvideo.play()\n    loopVideoRef.current.play();}}>\n      <source src=\"videos/welcome.mp4\" type=\"video/mp4\"></source>\n    </video>\n      \n\n      \n\n      {isOverlayVisible && (\n        <div className=\"overlay\" style={{zIndex:22}}>\n          <img\n            onClick={() => {setOverlayVisible(false)\n              const welcomevide=document.getElementById(\"welcome\")\n              welcomevide.play()}\n              }\n            height=\"100px\"\n            style={{\n              cursor: \"pointer\",\n            }}\n            src={buttonBg}\n            alt=\"button\"\n          />\n        </div>\n      )}\n    </div>\n    \n  );\n};\n\nexport default Home;\n","import \"./App.css\";\nimport Home from \"./components/Home\";\nimport React from \"react\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}